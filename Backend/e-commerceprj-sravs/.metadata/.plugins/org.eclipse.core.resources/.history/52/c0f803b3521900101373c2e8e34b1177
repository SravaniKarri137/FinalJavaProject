package com.example.controller;

import com.example.entity.WishlistItem;
import com.example.service.WishlistService;

import jakarta.servlet.http.HttpServletRequest;

import com.example.security.JwtUtil;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.web.bind.annotation.*;



@RestController
@RequestMapping("/wishlist")
public class WishlistController {

    @Autowired
    private WishlistService wishlistService;

    @Autowired
    private JwtUtil jwtUtil;

    // Add product to the wishlist
    @PostMapping("/add")
    public WishlistItem addProductToWishlist(@RequestParam Long productId, HttpServletRequest request) {
        String username = getUsernameFromJwt(request);
        return wishlistService.addProductToWishlist(username, productId);
    }

    // Remove product from the wishlist
    @DeleteMapping("/remove")
    public String removeProductFromWishlist(@RequestParam Long productId, HttpServletRequest request) {
        String username = getUsernameFromJwt(request);
        return wishlistService.removeProductFromWishlist(username, productId);
    }

    // Get all products in a user's wishlist
    @GetMapping("/user")
    public List<WishlistItem> getUserWishlist(HttpServletRequest request) {
        String username = getUsernameFromJwt(request);
        return wishlistService.getWishlistByUsername(username);
    }

    // Helper method to extract username from JWT token in request header
    private String getUsernameFromJwt(HttpServletRequest request) {
        String token = request.getHeader("Authorization");
        if (token != null && token.startsWith("Bearer ")) {
            token = token.substring(7); // Remove "Bearer " prefix
            return jwtUtil.extractUsername(token);
        }
        throw new RuntimeException("JWT token is missing or invalid");
    }
}
