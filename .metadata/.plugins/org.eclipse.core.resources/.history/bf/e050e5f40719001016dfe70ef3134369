package com.example.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.example.entity.CartItem;
import com.example.entity.Product;
import com.example.entity.User;

import jakarta.transaction.Transactional;

public interface CartRepository extends JpaRepository<CartItem, Long> {

    CartItem findByUserAndProduct(User user, Product product);

    List<CartItem> findByUser(User user);


    int countByUser(User user);

    void deleteByUserAndProduct(User user, Product product);

    List<CartItem> findByUserAndSelectedTrue(User user);

    List<CartItem> findByUserUsernameAndProductIdInAndSelectedTrue(String username, List<Long> productIds);

	List<CartItem> findByUserAndProductIdInAndSelectedTrue(User user, List<Long> selectedProductIds);

	List<CartItem> findByUserAndProductIdIn(User user, List<Long> selectedProductIds);
    @Query("SELECT ci FROM CartItem ci JOIN FETCH ci.product WHERE ci.user.id = :userId AND ci.selected = true")
    List<CartItem> findSelectedItemsWithProduct(Long userId);




    
}
