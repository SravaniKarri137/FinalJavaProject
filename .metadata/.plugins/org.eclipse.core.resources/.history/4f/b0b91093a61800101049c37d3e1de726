package com.example.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.entity.ReturnAndCancelled;
import com.example.entity.User;
import com.example.repository.UserRepository;
import com.example.service.ReturnAndCancelledService;

@RestController
@RequestMapping("/api/returns")
public class ReturnAndCancelledController {

    @Autowired
    private ReturnAndCancelledService returnService;

    @Autowired
    private UserRepository userRepository;

    @GetMapping("/user/{userId}/order/{orderId}")
    public ResponseEntity<?> getReturnsByUserAndOrder(
        @PathVariable Long userId,
        @PathVariable Long orderId
    ) {
        List<ReturnAndCancelled> returns = returnService.getReturnsByUserAndOrder(userId, orderId);

        Optional<User> userOpt = userRepository.findById(userId);

        if (userOpt.isEmpty()) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("User not found");
        }

        Map<String, Object> response = new HashMap<>();
        response.put("username", userOpt.get().getUsername());
        response.put("returns", returns);

        return ResponseEntity.ok(response);
    }
}
