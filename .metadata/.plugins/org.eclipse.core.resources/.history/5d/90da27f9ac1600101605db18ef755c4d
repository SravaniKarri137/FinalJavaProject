package com.example.controller;

import com.example.dto.RequestWithRemarksDTO;
import com.example.service.OrderService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("api/orders")
public class OrderController {

    @Autowired
    private OrderService orderService;

    @PostMapping("/cancel/item/{itemId}")
    public ResponseEntity<String> requestItemCancellation(@PathVariable Long itemId,
                                                          @ModelAttribute RequestWithRemarksDTO request) {
        String username = SecurityContextHolder.getContext().getAuthentication().getName();
        return orderService.requestCancellation(itemId, request, username);
    }
 // Get all orders for the logged-in user
    @GetMapping("/my-orders")
    public ResponseEntity<?> getAllOrdersForUser() {
        String username = SecurityContextHolder.getContext().getAuthentication().getName();
        return orderService.getOrdersForUser(username);
    }

    // Get all cancelled orders for the logged-in user
    @GetMapping("/my-cancelled-orders")
    public ResponseEntity<?> getCancelledOrdersForUser() {
        String username = SecurityContextHolder.getContext().getAuthentication().getName();
        return orderService.getCancelledOrdersForUser(username);
    }


    @PreAuthorize("hasRole('ADMIN')")
    @PostMapping("/cancel/approve/{recordId}")
    public ResponseEntity<String> approveCancellation(@PathVariable Long recordId) {
        String adminName = SecurityContextHolder.getContext().getAuthentication().getName();
        return orderService.approveCancellation(recordId, adminName);
    }

    @PreAuthorize("hasRole('ADMIN')")
    @PostMapping("/cancel/reject/{recordId}")
    public ResponseEntity<String> rejectCancellation(@PathVariable Long recordId) {
        String adminName = SecurityContextHolder.getContext().getAuthentication().getName();
        return orderService.rejectCancellation(recordId, adminName);
    }
}
