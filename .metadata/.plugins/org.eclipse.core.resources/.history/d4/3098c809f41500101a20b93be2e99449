package com.example.entity;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.*;

import lombok.*;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "orders")
public class Order {
    
    @Id 
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String username;
    private LocalDateTime orderDate;

    private Double totalAmount;
    private Double discountAmount;
    private Double finalPrice;

    // Order status: PLACED, CANCELLATION_REQUESTED, CANCELLED, REFUNDED
    private String status;

    // Optional coupon code
    private String couponCode;

    // Track if cancellation was requested
    private boolean cancellationRequested = false;

    // Optional reason for cancellation (future-proofing)
    private String cancellationReason;

    // Admin can mark if refunded
    private boolean isRefunded = false;

    // Store remarks for cancellation or return request
    private String remarks;

    // Store image URLs or paths for uploaded images related to the request
    @ElementCollection
    private List<String> imageUrls = new ArrayList<>();  // Store image URLs/paths

    @ManyToOne
    private Address shippingAddress;

    @OneToMany(mappedBy = "order", cascade = CascadeType.ALL)
    private List<OrderItem> items = new ArrayList<>();
    
    @ManyToOne
    @JoinColumn(name = "user_id", referencedColumnName = "id")
    private User user;

}
